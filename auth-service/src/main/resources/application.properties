spring.application.name=auth-service
server.port=8098

# eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.hostname=localhost
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

#datasource configuration
#spring.datasource.url=jdbc:postgresql://dpg-cp2qofi1hbls738314e0-a.oregon-postgres.render.com:5432/it_gura
#spring.datasource.username= it_gura_user
#spring.datasource.password=  lsbflvJ0HfdVIgbHNbCEZnzV3o9SAErn
#spring.datasource.hikari.schema=auth_service
spring.datasource.url=jdbc:postgresql://localhost:5432/itgura
spring.datasource.username=postgres
spring.datasource.password=root
spring.datasource.hikari.schema=auth_service
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true

logging.level.org.springframework.security=DEBUG


jwt.secretKey = f2b21eeadc7f3693dbc373dca5f49400293d722eb955353c11250b9367cd1635

app.dashboard.url=http://localhost:8081/Frontend/dashboard

#oauth2
spring.security.oauth2.client.registration.google.client-id=your_app_client_id
spring.security.oauth2.client.registration.google.client-secret=your_app_client_secret
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8081/auth-service/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=email